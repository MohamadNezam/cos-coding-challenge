{"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\tests\\services\\CarOnSaleClient.spec.ts":{"path":"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\tests\\services\\CarOnSaleClient.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":91}},"3":{"start":{"line":5,"column":30},"end":{"line":5,"column":66}},"4":{"start":{"line":6,"column":11},"end":{"line":6,"column":26}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":24}},"6":{"start":{"line":8,"column":12},"end":{"line":8,"column":28}},"7":{"start":{"line":9,"column":0},"end":{"line":39,"column":3}},"8":{"start":{"line":11,"column":4},"end":{"line":26,"column":7}},"9":{"start":{"line":12,"column":30},"end":{"line":12,"column":69}},"10":{"start":{"line":13,"column":8},"end":{"line":25,"column":11}},"11":{"start":{"line":14,"column":12},"end":{"line":23,"column":15}},"12":{"start":{"line":17,"column":16},"end":{"line":22,"column":18}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":89}},"14":{"start":{"line":27,"column":4},"end":{"line":38,"column":7}},"15":{"start":{"line":28,"column":30},"end":{"line":28,"column":69}},"16":{"start":{"line":29,"column":8},"end":{"line":37,"column":11}},"17":{"start":{"line":30,"column":12},"end":{"line":32,"column":15}},"18":{"start":{"line":31,"column":16},"end":{"line":31,"column":51}},"19":{"start":{"line":34,"column":27},"end":{"line":34,"column":69}},"20":{"start":{"line":35,"column":12},"end":{"line":35,"column":45}},"21":{"start":{"line":36,"column":12},"end":{"line":36,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":42},"end":{"line":9,"column":43}},"loc":{"start":{"line":9,"column":54},"end":{"line":39,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":48},"end":{"line":11,"column":49}},"loc":{"start":{"line":11,"column":60},"end":{"line":26,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":94},"end":{"line":13,"column":95}},"loc":{"start":{"line":13,"column":112},"end":{"line":25,"column":9}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":27},"end":{"line":16,"column":28}},"loc":{"start":{"line":16,"column":39},"end":{"line":23,"column":13}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":43},"end":{"line":27,"column":44}},"loc":{"start":{"line":27,"column":55},"end":{"line":38,"column":5}},"line":27},"5":{"name":"(anonymous_5)","decl":{"start":{"line":29,"column":82},"end":{"line":29,"column":83}},"loc":{"start":{"line":29,"column":100},"end":{"line":37,"column":9}},"line":29},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":72},"end":{"line":30,"column":73}},"loc":{"start":{"line":30,"column":84},"end":{"line":32,"column":13}},"line":30}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"inputSourceMap":{"version":3,"file":"M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/tests/services/CarOnSaleClient.spec.ts","sources":["M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/tests/services/CarOnSaleClient.spec.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,4FAAyF;AACzF,mEAAkD;AAElD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAE7B,QAAQ,CAAC,+BAA+B,EAAE;IACxC,gEAAgE;IAEhE,QAAQ,CAAC,iCAAiC,EAAE;QAC1C,IAAI,eAAe,GAAG,IAAI,iCAAe,EAAE,CAAC;QAE5C,EAAE,CAAC,iFAAiF,EAAE,KAAK;YACzF,KAAK;iBACF,IAAI,CAAC,eAAe,EAAE,yBAAyB,CAAC;iBAChD,SAAS,CAAC;gBACT,OAAO;oBACL,EAAE,EAAE,EAAE;oBACN,aAAa,EAAE,YAAY;oBAC3B,SAAS,EAAE,0BAA0B;oBACrC,IAAI,EAAE,sCAAsC;iBAC7C,CAAC;YACJ,CAAC,CAAC,CAAC;YAEL,MAAM,CAAC,CAAC,MAAM,eAAe,CAAC,uBAAuB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CACtE,EAAE,CACH,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,4BAA4B,EAAE;QACrC,IAAI,eAAe,GAAG,IAAI,iCAAe,EAAE,CAAC;QAE5C,EAAE,CAAC,qEAAqE,EAAE,KAAK;YAC7E,KAAK,CAAC,IAAI,CAAC,eAAe,EAAE,oBAAoB,CAAC,CAAC,SAAS,CAAC;gBAC1D,OAAO,2BAAK,CAAC;YACf,CAAC,CAAC,CAAC;YACH,sBAAsB;YACtB,MAAM,MAAM,GAAG,MAAM,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE1D,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import \"reflect-metadata\";\r\nimport { CarOnSaleClient } from \"../../services/CarOnSaleClient/classes/CarOnSaleClient\";\r\nimport { items } from \"../../runningAuction.json\";\r\n\r\nvar chai = require(\"chai\");\r\nvar expect = chai.expect;\r\nvar sinon = require(\"sinon\");\r\n\r\ndescribe(\"Testing CarOnSaleClient Class\", function () {\r\n  //carOnSaleClient.getGeneralBusinessTerms = sinon.fake.return();\r\n\r\n  describe(\"Testing getGeneralBusinessTerms\", function () {\r\n    var carOnSaleClient = new CarOnSaleClient();\r\n\r\n    it(\"should return an object with Get current version of the general business terms.\", async function () {\r\n      sinon\r\n        .stub(carOnSaleClient, \"getGeneralBusinessTerms\")\r\n        .callsFake(function () {\r\n          return {\r\n            id: 44,\r\n            contentAsHtml: \"test 29.10\",\r\n            createdAt: \"2021-10-29T07:42:52.316Z\",\r\n            uuid: \"fa6026b6-5376-4137-b5ae-1f9967c2042b\",\r\n          };\r\n        });\r\n\r\n      expect((await carOnSaleClient.getGeneralBusinessTerms()).id).to.be.equal(\r\n        44\r\n      );\r\n    });\r\n  });\r\n  describe(\"Testing getRunningAuctions\", function () {\r\n    var carOnSaleClient = new CarOnSaleClient();\r\n\r\n    it(\"should return an array of objects which containing running auctions\", async function () {\r\n      sinon.stub(carOnSaleClient, \"getRunningAuctions\").callsFake(function () {\r\n        return items;\r\n      });\r\n      // console.log(items);\r\n      const result = await carOnSaleClient.getRunningAuctions();\r\n\r\n      expect(result).to.be.an(\"array\");\r\n      expect(result).not.to.be.an(\"object\");\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"12563457e4859cc36f62a627e847f35d9099ad7c","contentHash":"42cd0b297f9427a068bae9b9b4dc05dc3056300cfb794db6098521ea33d68388"},"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\services\\CarOnSaleClient\\classes\\CarOnSaleClient.ts":{"path":"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\services\\CarOnSaleClient\\classes\\CarOnSaleClient.ts","statementMap":{"0":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"1":{"start":{"line":3,"column":12},"end":{"line":3,"column":28}},"2":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"3":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"4":{"start":{"line":4,"column":79},"end":{"line":4,"column":131}},"5":{"start":{"line":5,"column":9},"end":{"line":5,"column":150}},"6":{"start":{"line":5,"column":22},"end":{"line":5,"column":43}},"7":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"8":{"start":{"line":5,"column":81},"end":{"line":5,"column":150}},"9":{"start":{"line":6,"column":4},"end":{"line":6,"column":66}},"10":{"start":{"line":8,"column":22},"end":{"line":10,"column":1}},"11":{"start":{"line":9,"column":4},"end":{"line":9,"column":62}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":33}},"14":{"start":{"line":13,"column":20},"end":{"line":13,"column":40}},"15":{"start":{"line":14,"column":18},"end":{"line":14,"column":51}},"16":{"start":{"line":15,"column":16},"end":{"line":15,"column":49}},"17":{"start":{"line":18,"column":22},"end":{"line":55,"column":1}},"18":{"start":{"line":20,"column":24},"end":{"line":20,"column":47}},"19":{"start":{"line":22,"column":37},"end":{"line":22,"column":65}},"20":{"start":{"line":27,"column":21},"end":{"line":33,"column":10}},"21":{"start":{"line":34,"column":25},"end":{"line":34,"column":73}},"22":{"start":{"line":36,"column":33},"end":{"line":36,"column":35}},"23":{"start":{"line":37,"column":8},"end":{"line":45,"column":9}},"24":{"start":{"line":38,"column":12},"end":{"line":44,"column":15}},"25":{"start":{"line":46,"column":8},"end":{"line":46,"column":32}},"26":{"start":{"line":50,"column":24},"end":{"line":50,"column":47}},"27":{"start":{"line":51,"column":21},"end":{"line":51,"column":73}},"28":{"start":{"line":52,"column":25},"end":{"line":52,"column":76}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":29}},"30":{"start":{"line":56,"column":0},"end":{"line":58,"column":20}},"31":{"start":{"line":59,"column":0},"end":{"line":59,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":46},"end":{"line":2,"column":47}},"loc":{"start":{"line":2,"column":87},"end":{"line":7,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":56},"end":{"line":8,"column":57}},"loc":{"start":{"line":8,"column":71},"end":{"line":10,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":31},"end":{"line":47,"column":5}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":36},"end":{"line":54,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":17},"end":{"line":7,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":18},"end":{"line":2,"column":22}},{"start":{"line":2,"column":26},"end":{"line":2,"column":41}},{"start":{"line":2,"column":46},"end":{"line":7,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":34},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":42},"end":{"line":3,"column":48}},{"start":{"line":3,"column":51},"end":{"line":3,"column":125}}],"line":3},"2":{"loc":{"start":{"line":3,"column":51},"end":{"line":3,"column":125}},"type":"cond-expr","locations":[{"start":{"line":3,"column":67},"end":{"line":3,"column":118}},{"start":{"line":3,"column":121},"end":{"line":3,"column":125}}],"line":3},"3":{"loc":{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":4,"column":4},"end":{"line":5,"column":150}},{"start":{"line":4,"column":4},"end":{"line":5,"column":150}}],"line":4},"4":{"loc":{"start":{"line":4,"column":8},"end":{"line":4,"column":77}},"type":"binary-expr","locations":[{"start":{"line":4,"column":8},"end":{"line":4,"column":35}},{"start":{"line":4,"column":39},"end":{"line":4,"column":77}}],"line":4},"5":{"loc":{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},"type":"if","locations":[{"start":{"line":5,"column":58},"end":{"line":5,"column":150}},{"start":{"line":5,"column":58},"end":{"line":5,"column":150}}],"line":5},"6":{"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":149}},"type":"binary-expr","locations":[{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},{"start":{"line":5,"column":148},"end":{"line":5,"column":149}}],"line":5},"7":{"loc":{"start":{"line":5,"column":86},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":94},"end":{"line":5,"column":98}},{"start":{"line":5,"column":101},"end":{"line":5,"column":143}}],"line":5},"8":{"loc":{"start":{"line":5,"column":101},"end":{"line":5,"column":143}},"type":"cond-expr","locations":[{"start":{"line":5,"column":109},"end":{"line":5,"column":126}},{"start":{"line":5,"column":129},"end":{"line":5,"column":143}}],"line":5},"9":{"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":62}},"type":"binary-expr","locations":[{"start":{"line":6,"column":11},"end":{"line":6,"column":16}},{"start":{"line":6,"column":20},"end":{"line":6,"column":21}},{"start":{"line":6,"column":25},"end":{"line":6,"column":62}}],"line":6},"10":{"loc":{"start":{"line":8,"column":22},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":8,"column":23},"end":{"line":8,"column":27}},{"start":{"line":8,"column":31},"end":{"line":8,"column":51}},{"start":{"line":8,"column":56},"end":{"line":10,"column":1}}],"line":8},"11":{"loc":{"start":{"line":9,"column":11},"end":{"line":9,"column":61}},"type":"cond-expr","locations":[{"start":{"line":9,"column":37},"end":{"line":9,"column":40}},{"start":{"line":9,"column":43},"end":{"line":9,"column":61}}],"line":9},"12":{"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":33}},"type":"binary-expr","locations":[{"start":{"line":9,"column":12},"end":{"line":9,"column":15}},{"start":{"line":9,"column":19},"end":{"line":9,"column":33}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":1},"f":{"0":1,"1":1,"2":0,"3":0},"b":{"0":[1,1,1],"1":[1,0],"2":[0,0],"3":[1,0],"4":[1,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[1,0,0],"10":[1,1,1],"11":[0,1],"12":[1,1]},"inputSourceMap":{"version":3,"file":"M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/services/CarOnSaleClient/classes/CarOnSaleClient.ts","sources":["M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/services/CarOnSaleClient/classes/CarOnSaleClient.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yCAAuC;AAIvC,oDAAiD;AACjD,kDAA0B;AAE1B,4DAA4D;AAC5D,gDAAgD;AAEhD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAC1B,KAAK,CAAC,kBAAkB;QACtB,MAAM,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;QAE9B,oDAAoD;QACpD,MAAM,oBAAoB,GACxB,MAAM,OAAO,CAAC,YAAY,EAAE,CAAC;QAC/B;;;WAGG;QAEH,MAAM,IAAI,GAAG,eAAK,CAAC,MAAM,CAAC;YACxB,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,OAAO,EAAE;gBACP,MAAM,EAAE,GAAG,oBAAoB,CAAC,MAAM,EAAE;gBACxC,SAAS,EAAE,GAAG,oBAAoB,CAAC,KAAK,EAAE;aAC3C;SACF,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;QAElE,0CAA0C;QAC1C,MAAM,gBAAgB,GAAwB,EAAE,CAAC;QAEjD,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE;YACzC,gBAAgB,CAAC,IAAI,CAAC;gBACpB,EAAE,EAAE,OAAO,CAAC,EAAE;gBACd,KAAK,EAAE,OAAO,CAAC,KAAK;gBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;gBACxB,sBAAsB,EAAE,OAAO,CAAC,sBAAsB;gBACtD,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;aAC/C,CAAC,CAAC;SACJ;QACD,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IAED,qDAAqD;IACrD,KAAK,CAAC,uBAAuB;QAC3B,MAAM,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;QAC9B,MAAM,IAAI,GAAG,eAAK,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;QACxD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QACrE,OAAO,QAAQ,CAAC,IAAI,CAAC;IACvB,CAAC;CACF,CAAA;AA5CY,eAAe;IAD3B,sBAAU,EAAE;GACA,eAAe,CA4C3B;AA5CY,0CAAe","sourcesContent":["import { injectable } from \"inversify\";\r\nimport { IBuyerAuctionView } from \"../../../types/buyerAuctionView.type\";\r\nimport { IGeneralBusinessTerms } from \"../../../types/generalBusinessTerms.type\";\r\nimport { ICarOnSaleClient } from \"../interface/ICarOnSaleClient\";\r\nimport { AuthAPI } from \"../../../utils/AuthAPI\";\r\nimport axios from \"axios\";\r\nimport { IAuthenticationResult } from \"../../../types/authenticationResult.type\";\r\n//import staticJsondata from \"../../../runningAuction.json\";\r\n//import http from \"../../../utils/http-common\";\r\n@injectable()\r\nexport class CarOnSaleClient implements ICarOnSaleClient {\r\n  async getRunningAuctions(): Promise<IBuyerAuctionView[]> {\r\n    const authAPI = new AuthAPI();\r\n\r\n    // get auth token to be able to access runnin auctin\r\n    const authenticationResult: IAuthenticationResult =\r\n      await authAPI.getAuthToken();\r\n    /**\r\n     * The result contains a \"userId\" and a \"token\" field that have to be set as \"userid\" / \"authtoken\"\r\n     * HTTP header in further requests.\r\n     */\r\n\r\n    const http = axios.create({\r\n      baseURL: authAPI.baseURL,\r\n      headers: {\r\n        userid: `${authenticationResult.userId}`,\r\n        authtoken: `${authenticationResult.token}`,\r\n      },\r\n    });\r\n\r\n    const response = await http.get(\"/v2/auction/buyer/?count=false\");\r\n\r\n    //TODO change staticJsondata with response\r\n    const buyerAuctionView: IBuyerAuctionView[] = [];\r\n\r\n    for (const element of response.data.items) {\r\n      buyerAuctionView.push({\r\n        id: element.id,\r\n        label: element.label,\r\n        numBids: element.numBids,\r\n        currentHighestBidValue: element.currentHighestBidValue,\r\n        minimumRequiredAsk: element.minimumRequiredAsk,\r\n      });\r\n    }\r\n    return buyerAuctionView;\r\n  }\r\n\r\n  // Get current version of the general business terms.\r\n  async getGeneralBusinessTerms(): Promise<IGeneralBusinessTerms> {\r\n    const authAPI = new AuthAPI();\r\n    const http = axios.create({ baseURL: authAPI.baseURL });\r\n    const response = await http.get(\"/v1/public/general-business-terms\");\r\n    return response.data;\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"983e057a5d230a7f978a5a6d0fb00a6a192dbc07","contentHash":"2dff06cc6aaa5512585aff7d568c4be3f8370bcb00404fc8e713b44ddff60672"},"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\utils\\AuthAPI.ts":{"path":"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\utils\\AuthAPI.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":63}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":61}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":44}},"8":{"start":{"line":13,"column":8},"end":{"line":20,"column":10}},"9":{"start":{"line":21,"column":8},"end":{"line":24,"column":10}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":70}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":83}},"12":{"start":{"line":37,"column":8},"end":{"line":37,"column":95}},"13":{"start":{"line":44,"column":8},"end":{"line":44,"column":95}},"14":{"start":{"line":51,"column":8},"end":{"line":64,"column":9}},"15":{"start":{"line":53,"column":12},"end":{"line":53,"column":51}},"16":{"start":{"line":54,"column":12},"end":{"line":54,"column":54}},"17":{"start":{"line":55,"column":12},"end":{"line":56,"column":37}},"18":{"start":{"line":56,"column":16},"end":{"line":56,"column":37}},"19":{"start":{"line":60,"column":12},"end":{"line":60,"column":62}},"20":{"start":{"line":61,"column":12},"end":{"line":61,"column":54}},"21":{"start":{"line":62,"column":12},"end":{"line":63,"column":37}},"22":{"start":{"line":63,"column":16},"end":{"line":63,"column":37}},"23":{"start":{"line":65,"column":8},"end":{"line":65,"column":41}},"24":{"start":{"line":68,"column":0},"end":{"line":68,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":26,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":63},"end":{"line":32,"column":5}},"line":30},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":123},"end":{"line":38,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":110},"end":{"line":45,"column":5}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":49,"column":4},"end":{"line":49,"column":5}},"loc":{"start":{"line":49,"column":25},"end":{"line":66,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":30,"column":28},"end":{"line":30,"column":61}},"type":"default-arg","locations":[{"start":{"line":30,"column":42},"end":{"line":30,"column":61}}],"line":30},"4":{"loc":{"start":{"line":36,"column":36},"end":{"line":36,"column":69}},"type":"default-arg","locations":[{"start":{"line":36,"column":50},"end":{"line":36,"column":69}}],"line":36},"5":{"loc":{"start":{"line":36,"column":71},"end":{"line":36,"column":121}},"type":"default-arg","locations":[{"start":{"line":36,"column":95},"end":{"line":36,"column":121}}],"line":36},"6":{"loc":{"start":{"line":43,"column":25},"end":{"line":43,"column":58}},"type":"default-arg","locations":[{"start":{"line":43,"column":39},"end":{"line":43,"column":58}}],"line":43},"7":{"loc":{"start":{"line":43,"column":60},"end":{"line":43,"column":108}},"type":"default-arg","locations":[{"start":{"line":43,"column":83},"end":{"line":43,"column":108}}],"line":43},"8":{"loc":{"start":{"line":55,"column":12},"end":{"line":56,"column":37}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":56,"column":37}},{"start":{"line":55,"column":12},"end":{"line":56,"column":37}}],"line":55},"9":{"loc":{"start":{"line":62,"column":12},"end":{"line":63,"column":37}},"type":"if","locations":[{"start":{"line":62,"column":12},"end":{"line":63,"column":37}},{"start":{"line":62,"column":12},"end":{"line":63,"column":37}}],"line":62}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1},"f":{"0":1,"1":1,"2":2,"3":1,"4":1,"5":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0],"4":[1],"5":[1],"6":[1],"7":[1],"8":[1,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/utils/AuthAPI.ts","sources":["M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/utils/AuthAPI.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAG1B,MAAa,OAAO;IAApB;QACS,YAAO,GAAG,uCAAuC,CAAC;QAClD,mBAAc,GAAG,8BAA8B,CAAC;QAC/C,sBAAiB,GAAG,UAAU,CAAC;QAC/B,yBAAoB,GAA0B;YACpD,KAAK,EACH,iYAAiY;YACnY,aAAa,EAAE,IAAI;YACnB,MAAM,EAAE,8BAA8B;YACtC,gBAAgB,EAAE,sCAAsC;YACxD,IAAI,EAAE,CAAC;YACP,UAAU,EAAE,iBAAiB;SAC9B,CAAC;QACM,0BAAqB,GAA2B;YACtD,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,IAAI,EAAE,EAAE;SACT,CAAC;QAEM,SAAI,GAAG,eAAK,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IAuDzD,CAAC;IArDC;;OAEG;IACI,KAAK,CAAC,iBAAiB,CAAC,cAAsB,IAAI,CAAC,cAAc;QACtE,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,WAAW,aAAa,CAAC,CAAC;IAC7E,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,yBAAyB,CACpC,cAAsB,IAAI,CAAC,cAAc,EACzC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB;QAElD,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CACxB,sBAAsB,WAAW,EAAE,EACnC,qBAAqB,CACtB,CAAC;IACJ,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,cAAc,CACzB,cAAsB,IAAI,CAAC,cAAc,EACzC,oBAAoB,GAAG,IAAI,CAAC,oBAAoB;QAEhD,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CACzB,sBAAsB,WAAW,EAAE,EACnC,oBAAoB,CACrB,CAAC;IACJ,CAAC;IAED;;OAEG;IACI,KAAK,CAAC,YAAY;QACvB,IAAI,QAAQ,CAAC;QACb,IAAI;YACF,+CAA+C;YAC/C,QAAQ,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;YACvC,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC1C,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG;gBAAE,OAAO,QAAQ,CAAC,IAAI,CAAC;SACnD;QAAC,OAAO,GAAG,EAAE;YACZ,4BAA4B;YAC5B,QAAQ,GAAG,MAAM,IAAI,CAAC,yBAAyB,EAAE,CAAC;YAClD,IAAI,CAAC,oBAAoB,GAAG,QAAQ,CAAC,IAAI,CAAC;YAC1C,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG;gBAAE,OAAO,QAAQ,CAAC,IAAI,CAAC;SACnD;QAED,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;CACF;AAzED,0BAyEC","sourcesContent":["import axios from \"axios\";\r\nimport { IAuthenticationRequest } from \"../types/authenticationRequest.type\";\r\nimport { IAuthenticationResult } from \"../types/authenticationResult.type\";\r\nexport class AuthAPI {\r\n  public baseURL = \"https://api-core-dev.caronsale.de/api\";\r\n  public buyerUserEmail = \"buyer-challenge@caronsale.de\";\r\n  private buyerUserPassword = \"Test123.\";\r\n  private authenticationResult: IAuthenticationResult = {\r\n    token:\r\n      \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbiI6IlRPS0VOLWJ1eWVyLWNoYWxsZW5nZUBjYXJvbnNhbGUuZGUiLCJ1c2VyVXVpZCI6IjA1NGQ0NTc3LTY5YTAtNGU0Yi04ZTVlLTk3NWJjZjhjNjJjNyIsImlhdCI6MTYzNTQ5Mjk4MywiZXhwIjoxNjM1NzUyMTgzfQ.CSmSymSWujx_mGf8QAOFBP-8kCieLN8aNfkMDXE68oT0vJXh-AS1S5Ke4zWF-KMiJrNTbHikBj6MdhA2ixIMxs64MbGy2759vNgolWfKXuZUPT257ytCnqOXH8vBF1sgzmOYNOjWSXa2SG4JyNSO1PNpnkXmFlEELes5CzAYzAc\",\r\n    authenticated: true,\r\n    userId: \"buyer-challenge@caronsale.de\",\r\n    internalUserUUID: \"054d4577-69a0-4e4b-8e5e-975bcf8c62c7\",\r\n    type: 1,\r\n    privileges: \"{SALESMAN_USER}\",\r\n  };\r\n  private authenticationRequest: IAuthenticationRequest = {\r\n    password: this.buyerUserPassword,\r\n    meta: \"\",\r\n  };\r\n\r\n  private http = axios.create({ baseURL: this.baseURL });\r\n\r\n  /**\r\n   * Verify if the provided e-mail address has credentials in the IdP\r\n   */\r\n  public async checkIfEmailExist(mailAddress: string = this.buyerUserEmail) {\r\n    return await this.http.get(`/v1/authentication/${mailAddress}/registered`);\r\n  }\r\n\r\n  /**\r\n   * Create authentication token for given credentials.\r\n   */\r\n  public async sendAuthenticationRequest(\r\n    mailAddress: string = this.buyerUserEmail,\r\n    authenticationRequest = this.authenticationRequest\r\n  ) {\r\n    return await this.http.put(\r\n      `/v1/authentication/${mailAddress}`,\r\n      authenticationRequest\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Validate if the given authentication token is expired yet.\r\n   * If it is not expired, session life time is extended.\r\n   */\r\n  public async checkAuthToken(\r\n    mailAddress: string = this.buyerUserEmail,\r\n    authenticationResult = this.authenticationResult\r\n  ) {\r\n    return await this.http.post(\r\n      `/v1/authentication/${mailAddress}`,\r\n      authenticationResult\r\n    );\r\n  }\r\n\r\n  /**\r\n   * get auth token for the current users\r\n   */\r\n  public async getAuthToken(): Promise<IAuthenticationResult> {\r\n    let response;\r\n    try {\r\n      // if they current one still availabe return it\r\n      response = await this.checkAuthToken();\r\n      this.authenticationResult = response.data;\r\n      if (response.status === 200) return response.data;\r\n    } catch (err) {\r\n      // otherwise request new one\r\n      response = await this.sendAuthenticationRequest();\r\n      this.authenticationResult = response.data;\r\n      if (response.status === 201) return response.data;\r\n    }\r\n\r\n    return this.authenticationResult;\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"008bb69a564b118a5afac172a217920a31e30a4a","contentHash":"4709b63ee260879790443d867cd8dfe9283d53295fc9973eae048c0eb30c1dbf"},"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\tests\\ulils\\authApi.spec.ts":{"path":"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\tests\\ulils\\authApi.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":11},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":24}},"3":{"start":{"line":6,"column":11},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":48}},"5":{"start":{"line":8,"column":0},"end":{"line":65,"column":3}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":46}},"7":{"start":{"line":10,"column":16},"end":{"line":10,"column":41}},"8":{"start":{"line":11,"column":4},"end":{"line":16,"column":7}},"9":{"start":{"line":12,"column":8},"end":{"line":12,"column":23}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":24}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":24}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":15}},"13":{"start":{"line":17,"column":4},"end":{"line":39,"column":7}},"14":{"start":{"line":18,"column":8},"end":{"line":24,"column":11}},"15":{"start":{"line":19,"column":24},"end":{"line":19,"column":69}},"16":{"start":{"line":20,"column":12},"end":{"line":20,"column":71}},"17":{"start":{"line":21,"column":27},"end":{"line":21,"column":68}},"18":{"start":{"line":23,"column":12},"end":{"line":23,"column":51}},"19":{"start":{"line":25,"column":8},"end":{"line":38,"column":11}},"20":{"start":{"line":26,"column":24},"end":{"line":26,"column":69}},"21":{"start":{"line":27,"column":23},"end":{"line":27,"column":28}},"22":{"start":{"line":28,"column":12},"end":{"line":28,"column":61}},"23":{"start":{"line":29,"column":12},"end":{"line":33,"column":25}},"24":{"start":{"line":30,"column":16},"end":{"line":30,"column":58}},"25":{"start":{"line":31,"column":16},"end":{"line":31,"column":28}},"26":{"start":{"line":34,"column":12},"end":{"line":35,"column":39}},"27":{"start":{"line":35,"column":16},"end":{"line":35,"column":39}},"28":{"start":{"line":40,"column":4},"end":{"line":58,"column":7}},"29":{"start":{"line":41,"column":8},"end":{"line":57,"column":11}},"30":{"start":{"line":42,"column":24},"end":{"line":42,"column":53}},"31":{"start":{"line":43,"column":33},"end":{"line":51,"column":13}},"32":{"start":{"line":52,"column":12},"end":{"line":52,"column":71}},"33":{"start":{"line":53,"column":27},"end":{"line":53,"column":71}},"34":{"start":{"line":54,"column":12},"end":{"line":54,"column":51}},"35":{"start":{"line":55,"column":12},"end":{"line":55,"column":58}},"36":{"start":{"line":59,"column":4},"end":{"line":64,"column":7}},"37":{"start":{"line":60,"column":8},"end":{"line":63,"column":11}},"38":{"start":{"line":61,"column":27},"end":{"line":61,"column":58}},"39":{"start":{"line":62,"column":12},"end":{"line":62,"column":55}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":44},"end":{"line":8,"column":45}},"loc":{"start":{"line":8,"column":56},"end":{"line":65,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":15},"end":{"line":11,"column":16}},"loc":{"start":{"line":11,"column":25},"end":{"line":16,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":49},"end":{"line":17,"column":50}},"loc":{"start":{"line":17,"column":61},"end":{"line":39,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":38},"end":{"line":18,"column":39}},"loc":{"start":{"line":18,"column":56},"end":{"line":24,"column":9}},"line":18},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":64},"end":{"line":25,"column":65}},"loc":{"start":{"line":25,"column":82},"end":{"line":38,"column":9}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":40,"column":57},"end":{"line":40,"column":58}},"loc":{"start":{"line":40,"column":69},"end":{"line":58,"column":5}},"line":40},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":65},"end":{"line":41,"column":66}},"loc":{"start":{"line":41,"column":83},"end":{"line":57,"column":9}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":59,"column":46},"end":{"line":59,"column":47}},"loc":{"start":{"line":59,"column":58},"end":{"line":64,"column":5}},"line":59},"8":{"name":"(anonymous_8)","decl":{"start":{"line":60,"column":40},"end":{"line":60,"column":41}},"loc":{"start":{"line":60,"column":58},"end":{"line":63,"column":9}},"line":60}},"branchMap":{"0":{"loc":{"start":{"line":34,"column":12},"end":{"line":35,"column":39}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":35,"column":39}},{"start":{"line":34,"column":12},"end":{"line":35,"column":39}}],"line":34}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":4,"10":4,"11":4,"12":4,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":0,"26":1,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1},"f":{"0":1,"1":4,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{"0":[0,1]},"inputSourceMap":{"version":3,"file":"M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/tests/ulils/authApi.spec.ts","sources":["M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/tests/ulils/authApi.spec.ts"],"names":[],"mappings":";;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB,+BAA+B;AAC/B,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE3B,iDAA8C;AAE9C,QAAQ,CAAC,iCAAiC,EAAE;IAC1C,MAAM,UAAU,GAAG,IAAI,iBAAO,EAAE,CAAC;IACjC,IAAI,KAAK,GAAG,UAAU,CAAC,cAAc,CAAC;IACtC,UAAU,CAAC,CAAC,IAAI,EAAE,EAAE;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,EAAE,CAAC;IACT,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kCAAkC,EAAE;QAC3C,EAAE,CAAC,yBAAyB,EAAE,KAAK;YACjC,MAAM,GAAG,GAAG,qBAAqB,GAAG,KAAK,GAAG,aAAa,CAAC;YAC1D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAC3D,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACzD,sBAAsB;YACtB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK;YAC3D,MAAM,GAAG,GAAG,qBAAqB,GAAG,KAAK,GAAG,aAAa,CAAC;YAC1D,IAAI,IAAI,GAAG,KAAK,CAAC;YACjB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;YAEjD,IAAI;gBACF,MAAM,UAAU,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;gBAC1C,IAAI,GAAG,IAAI,CAAC;aACb;YAAC,OAAO,CAAC,EAAE,GAAE;YACd,IAAI,IAAI;gBAAE,MAAM,KAAK,CAAC,SAAS,CAAC,CAAC;YACjC,4CAA4C;YAE5C,sBAAsB;QACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0CAA0C,EAAE;QACnD,EAAE,CAAC,oDAAoD,EAAE,KAAK;YAC5D,MAAM,GAAG,GAAG,sBAAsB,KAAK,EAAE,CAAC;YAC1C,MAAM,YAAY,GAAG;gBACnB,KAAK,EACH,iYAAiY;gBACnY,aAAa,EAAE,IAAI;gBACnB,MAAM,EAAE,8BAA8B;gBACtC,cAAc,EAAE,IAAI;gBACpB,gBAAgB,EAAE,sCAAsC;gBACxD,IAAI,EAAE,CAAC;gBACP,UAAU,EAAE,iBAAiB;aAC9B,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;YAC3D,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,yBAAyB,EAAE,CAAC;YAE5D,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YACvC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC9C,qEAAqE;QACvE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE;QACxC,EAAE,CAAC,2BAA2B,EAAE,KAAK;YACnC,MAAM,MAAM,GAAG,MAAM,UAAU,CAAC,YAAY,EAAE,CAAC;YAC/C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["var chai = require(\"chai\");\r\nvar expect = chai.expect;\r\n//var sinon = require(\"sinon\");\r\nvar nock = require(\"nock\");\r\n\r\nimport { AuthAPI } from \"../../utils/AuthAPI\";\r\n\r\ndescribe(\"WE are going to test AuthAPI.ts\", function () {\r\n  const authApiObj = new AuthAPI();\r\n  var email = authApiObj.buyerUserEmail;\r\n  beforeEach((done) => {\r\n    nock.restore();\r\n    nock.cleanAll();\r\n    nock.activate();\r\n    done();\r\n  });\r\n\r\n  describe(\"testing checkIfEmailExist method\", function () {\r\n    it(\"if user has credentials\", async function () {\r\n      const url = \"/v1/authentication/\" + email + \"/registered\";\r\n      nock(authApiObj.baseURL).persist().get(url).reply(204, {});\r\n      const result = await authApiObj.checkIfEmailExist(email);\r\n      //console.log(result);\r\n      expect(result.status).to.be.equal(204);\r\n    });\r\n\r\n    it(\"if no user found with the provided e-mail address\", async function () {\r\n      const url = \"/v1/authentication/\" + email + \"/registered\";\r\n      var fail = false;\r\n      nock(authApiObj.baseURL).get(url).reply(404, {});\r\n\r\n      try {\r\n        await authApiObj.checkIfEmailExist(email);\r\n        fail = true;\r\n      } catch (e) {}\r\n      if (fail) throw Error(\"nothing\");\r\n      //if (fail === false) throw console.error();\r\n\r\n      //console.log(result);\r\n    });\r\n  });\r\n\r\n  describe(\"testing sendAuthenticationRequest method\", function () {\r\n    it(\"Create authentication token for given credentials.\", async function () {\r\n      const url = `/v1/authentication/${email}`;\r\n      const responseBody = {\r\n        token:\r\n          \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbiI6IlRPS0VOLWJ1eWVyLWNoYWxsZW5nZUBjYXJvbnNhbGUuZGUiLCJ1c2VyVXVpZCI6IjA1NGQ0NTc3LTY5YTAtNGU0Yi04ZTVlLTk3NWJjZjhjNjJjNyIsImlhdCI6MTYzNTU5NDYxNiwiZXhwIjoxNjM1ODUzODE2fQ.Y_jmUepTWfRghZq48w_LYnRpY2eNPpHCtfAKRaAqE82j1O9NqXTWxvZR5AKPKei8L854M90uqPZp2nfQy2V8sMBNYBPO8egoDgEsluuvYkun2l5CI-os8CQRj36QxjLireBEF1rFGw_HOZh5rvqIKHIUVeK99P_g_WGnOucF0ew\",\r\n        authenticated: true,\r\n        userId: \"buyer-challenge@caronsale.de\",\r\n        internalUserId: 2324,\r\n        internalUserUUID: \"054d4577-69a0-4e4b-8e5e-975bcf8c62c7\",\r\n        type: 1,\r\n        privileges: \"{SALESMAN_USER}\",\r\n      };\r\n      nock(authApiObj.baseURL).put(url).reply(201, responseBody);\r\n      const result = await authApiObj.sendAuthenticationRequest();\r\n\r\n      expect(result.status).to.be.equal(201);\r\n      expect(result.data).to.have.property(\"token\");\r\n      //expect(result.data).to.have.property(\"authenticated\").equal(false);\r\n    });\r\n  });\r\n\r\n  describe(\"testing checkAuthToken method\", function () {\r\n    it(\"should returm auth token \", async function () {\r\n      const result = await authApiObj.getAuthToken();\r\n      expect(result.token).to.be.not.equal(null);\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c4a70ad8013c142db0e97bd40277b78f06c320e1","contentHash":"91bf68a7980a0360e1f802d1e947d757208f8768e4b704cb466a2d5218c18692"},"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\tests\\ulils\\FormattingRunningAuction.spec.ts":{"path":"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\tests\\ulils\\FormattingRunningAuction.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":35},"end":{"line":4,"column":82}},"3":{"start":{"line":5,"column":30},"end":{"line":5,"column":66}},"4":{"start":{"line":6,"column":11},"end":{"line":6,"column":26}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":24}},"6":{"start":{"line":8,"column":0},"end":{"line":23,"column":3}},"7":{"start":{"line":9,"column":4},"end":{"line":22,"column":7}},"8":{"start":{"line":10,"column":8},"end":{"line":15,"column":11}},"9":{"start":{"line":11,"column":27},"end":{"line":11,"column":107}},"10":{"start":{"line":12,"column":12},"end":{"line":12,"column":59}},"11":{"start":{"line":13,"column":12},"end":{"line":13,"column":73}},"12":{"start":{"line":14,"column":12},"end":{"line":14,"column":80}},"13":{"start":{"line":16,"column":8},"end":{"line":21,"column":11}},"14":{"start":{"line":17,"column":27},"end":{"line":17,"column":107}},"15":{"start":{"line":18,"column":12},"end":{"line":18,"column":60}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":75}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":81}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":45},"end":{"line":8,"column":46}},"loc":{"start":{"line":8,"column":57},"end":{"line":23,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":67},"end":{"line":9,"column":68}},"loc":{"start":{"line":9,"column":79},"end":{"line":22,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":146},"end":{"line":10,"column":147}},"loc":{"start":{"line":10,"column":158},"end":{"line":15,"column":9}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":160},"end":{"line":16,"column":161}},"loc":{"start":{"line":16,"column":172},"end":{"line":21,"column":9}},"line":16}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1,"1":1,"2":1,"3":1},"b":{},"inputSourceMap":{"version":3,"file":"M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/tests/ulils/FormattingRunningAuction.spec.ts","sources":["M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/tests/ulils/FormattingRunningAuction.spec.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAC1B,mFAAgF;AAChF,mEAAyD;AAEzD,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAEzB,QAAQ,CAAC,kCAAkC,EAAE;IAC3C,QAAQ,CAAC,oDAAoD,EAAE;QAC7D,EAAE,CAAC,qIAAqI,EAAE;YACxI,MAAM,MAAM,GAAG,mDAAwB,CAAC,2BAAK,CAAC,CAAC;YAC/C,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,MAAM,CAAC,qCAAqC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,mJAAmJ,EAAE;YACtJ,MAAM,MAAM,GAAG,mDAAwB,CAAC,2BAAK,CAAC,CAAC;YAC/C,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAChD,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/D,MAAM,CAAC,MAAM,CAAC,qCAAqC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import \"reflect-metadata\";\r\nimport { FormattingRunningAuction } from \"../../utils/FormattingRunningAuction\";\r\nimport { empty, items } from \"../../runningAuction.json\";\r\n\r\nvar chai = require(\"chai\");\r\nvar expect = chai.expect;\r\n\r\ndescribe(\"Testing FormattingRunningAuction\", function () {\r\n  describe(\"test if aggregation running auction done correctly\", function () {\r\n    it(\"should return 0 for numberOfAuctions,averageNumberOfBidsOnAnAuction,averagePercentageOfTheAuctionProgress when no running auctions \", function () {\r\n      const result = FormattingRunningAuction(empty);\r\n      expect(result.numberOfAuctions).to.be.equal(0);\r\n      expect(result.averageNumberOfBidsOnAnAuction).to.be.equal(0);\r\n      expect(result.averagePercentageOfTheAuctionProgress).to.be.equal(0);\r\n    });\r\n    it(\"should return the calculation for numberOfAuctions,averageNumberOfBidsOnAnAuction,averagePercentageOfTheAuctionProgress when no running auctions \", function () {\r\n      const result = FormattingRunningAuction(items);\r\n      expect(result.numberOfAuctions).to.be.equal(10);\r\n      expect(result.averageNumberOfBidsOnAnAuction).to.be.equal(0.1);\r\n      expect(result.averagePercentageOfTheAuctionProgress).to.be.eql(0.07);\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e9238fe484bd2b21d78d14e6188c93fc3dcda1a3","contentHash":"da55a781f60701a25db4ab4bfa98f34b3a120a4e6c7a3c1243e4a324d7a8141e"},"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\utils\\FormattingRunningAuction.ts":{"path":"M:\\OneDrive\\github\\cos-coding-challenge\\challenges\\backend\\src\\app\\utils\\FormattingRunningAuction.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":9,"column":4},"end":{"line":14,"column":10}},"3":{"start":{"line":10,"column":8},"end":{"line":14,"column":10}},"4":{"start":{"line":15,"column":27},"end":{"line":15,"column":48}},"5":{"start":{"line":16,"column":23},"end":{"line":16,"column":26}},"6":{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},"7":{"start":{"line":19,"column":4},"end":{"line":38,"column":5}},"8":{"start":{"line":20,"column":8},"end":{"line":20,"column":40}},"9":{"start":{"line":21,"column":8},"end":{"line":37,"column":9}},"10":{"start":{"line":22,"column":12},"end":{"line":23,"column":76}},"11":{"start":{"line":26,"column":12},"end":{"line":36,"column":77}},"12":{"start":{"line":39,"column":41},"end":{"line":39,"column":72}},"13":{"start":{"line":40,"column":48},"end":{"line":40,"column":102}},"14":{"start":{"line":42,"column":4},"end":{"line":46,"column":6}},"15":{"start":{"line":48,"column":0},"end":{"line":48,"column":60}}},"fnMap":{"0":{"name":"FormattingRunningAuction","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":33}},"loc":{"start":{"line":8,"column":50},"end":{"line":47,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":14,"column":10}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":14,"column":10}},{"start":{"line":9,"column":4},"end":{"line":14,"column":10}}],"line":9},"1":{"loc":{"start":{"line":21,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":37,"column":9}},{"start":{"line":21,"column":8},"end":{"line":37,"column":9}}],"line":21}},"s":{"0":1,"1":1,"2":2,"3":1,"4":1,"5":1,"6":1,"7":1,"8":10,"9":10,"10":10,"11":0,"12":1,"13":1,"14":1,"15":1},"f":{"0":2},"b":{"0":[1,1],"1":[10,0]},"inputSourceMap":{"version":3,"file":"M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/utils/FormattingRunningAuction.ts","sources":["M:/OneDrive/github/cos-coding-challenge/challenges/backend/src/app/utils/FormattingRunningAuction.ts"],"names":[],"mappings":";;;AAGA;;;GAGG;AAEH,SAAgB,wBAAwB,CACtC,cAAmC;IAEnC,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC;QAC7B,OAAO;YACL,gBAAgB,EAAE,CAAC;YACnB,8BAA8B,EAAE,CAAC;YACjC,qCAAqC,EAAE,CAAC;SACzC,CAAC;IACJ,IAAI,gBAAgB,GAAW,cAAc,CAAC,MAAM,CAAC;IACrD,IAAI,YAAY,GAAW,GAAG,CAAC;IAC/B,wEAAwE;IACxE,IAAI,mCAAmC,GAAW,GAAG,CAAC;IACtD,KAAK,MAAM,OAAO,IAAI,cAAc,EAAE;QACpC,YAAY,IAAI,OAAO,CAAC,OAAO,CAAC;QAChC,IAAI,OAAO,CAAC,kBAAkB,EAAE;YAC9B,mCAAmC;gBACjC,OAAO,CAAC,sBAAsB,GAAG,OAAO,CAAC,kBAAkB,CAAC;SAC/D;aAAM;YACL,OAAO,CAAC,GAAG;YACT,OAAO;YACP,yDAAyD;YACzD,SAAS;gBACP,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE;gBAC1B,GAAG;gBACH,OAAO,CAAC,sBAAsB,CAAC,QAAQ,EAAE;gBACzC,GAAG;gBACH,OAAO,CAAC,kBAAkB;gBAC1B,GAAG;gBACH,OAAO,CAAC,sBAAsB,GAAG,OAAO,CAAC,kBAAkB,CAC9D,CAAC;SACH;KACF;IAED,IAAI,8BAA8B,GAAG,YAAY,GAAG,gBAAgB,CAAC;IAErE,IAAI,qCAAqC,GACvC,mCAAmC,GAAG,gBAAgB,CAAC;IAEzD,4CAA4C;IAC5C,OAAO;QACL,gBAAgB,EACd,IAAI,CAAC,KAAK,CAAC,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;QAC7D,8BAA8B,EAC5B,IAAI,CAAC,KAAK,CAAC,CAAC,8BAA8B,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG;QAC3E,qCAAqC,EACnC,IAAI,CAAC,KAAK,CACR,CAAC,qCAAqC,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,CAC/D,GAAG,GAAG;KACV,CAAC;AACJ,CAAC;AAlDD,4DAkDC","sourcesContent":["import { IBuyerAuctionView } from \"../types/buyerAuctionView.type\";\r\nimport { IRunningAuctionFormat } from \"../types/runningAuctionFormat.type\";\r\n\r\n/*\r\n * This function aggregate running auction information\r\n * and retun the result in an object of type IRunningAuctionFormat\r\n */\r\n\r\nexport function FormattingRunningAuction(\r\n  runningAuction: IBuyerAuctionView[]\r\n): IRunningAuctionFormat {\r\n  if (runningAuction.length === 0)\r\n    return {\r\n      numberOfAuctions: 0,\r\n      averageNumberOfBidsOnAnAuction: 0,\r\n      averagePercentageOfTheAuctionProgress: 0,\r\n    };\r\n  let numberOfAuctions: number = runningAuction.length;\r\n  let totalNumBids: number = 0.0;\r\n  //Sum of the ratio of current highest bid value and minimum required ask\r\n  let totalPercentageOfTheAuctionProgress: number = 0.0;\r\n  for (const element of runningAuction) {\r\n    totalNumBids += element.numBids;\r\n    if (element.minimumRequiredAsk) {\r\n      totalPercentageOfTheAuctionProgress +=\r\n        element.currentHighestBidValue / element.minimumRequiredAsk;\r\n    } else {\r\n      console.log(\r\n        // TODO\r\n        // minimumRequiredAsk is not set ( null ) ignor right now\r\n        \"error: \" +\r\n          element.numBids.toString() +\r\n          \" \" +\r\n          element.currentHighestBidValue.toString() +\r\n          \" \" +\r\n          element.minimumRequiredAsk +\r\n          \" \" +\r\n          element.currentHighestBidValue / element.minimumRequiredAsk\r\n      );\r\n    }\r\n  }\r\n\r\n  let averageNumberOfBidsOnAnAuction = totalNumBids / numberOfAuctions;\r\n\r\n  let averagePercentageOfTheAuctionProgress =\r\n    totalPercentageOfTheAuctionProgress / numberOfAuctions;\r\n\r\n  //round result to two digit before return it\r\n  return {\r\n    numberOfAuctions:\r\n      Math.round((numberOfAuctions + Number.EPSILON) * 100) / 100,\r\n    averageNumberOfBidsOnAnAuction:\r\n      Math.round((averageNumberOfBidsOnAnAuction + Number.EPSILON) * 100) / 100,\r\n    averagePercentageOfTheAuctionProgress:\r\n      Math.round(\r\n        (averagePercentageOfTheAuctionProgress + Number.EPSILON) * 100\r\n      ) / 100,\r\n  };\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0e0e41dc1bfc877d393bf5dfae166d2daf56595","contentHash":"41a8950d12cc84bd073240226ecdbf76f12242281c67bd29083d1c594714eaaf"}}